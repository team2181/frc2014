// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "LauncherTriggerCommand.h"
LauncherTriggerCommand::LauncherTriggerCommand() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::launcher);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	SetTimeout(0.6);
	SetInterruptible(false);
}
// Called just before this Command runs the first time
void LauncherTriggerCommand::Initialize() {
	a = !Robot::launcher->limitSwitchDown->Get();
	Robot::launcher->setLauncherSpeed(1);
}
// Called repeatedly when this Command is scheduled to run
void LauncherTriggerCommand::Execute() {
}
// Make this return true when this Command no longer needs to run execute()
bool LauncherTriggerCommand::IsFinished() {
	//Ends command when the launcher's top limit switch is triggered. 
	//At this point, the launcher should be in its fully upward position.
	return (IsTimedOut()) || (!Robot::launcher->limitSwitchUp->Get()) || !a;
}
// Called once after isFinished returns true
void LauncherTriggerCommand::End() {
	Robot::launcher->setLauncherSpeed(0);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void LauncherTriggerCommand::Interrupted() {
}
